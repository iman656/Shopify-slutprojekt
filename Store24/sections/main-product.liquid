{% comment %}
  The contents of this file control the appearance of individual product pages.
  Learn more at: https://shopify.dev/docs/themes/liquid/reference/templates/product
{% endcomment %}

<div class="firstmainbr">
  <div class="main-breadcrumbs">
    {% if template contains 'product' %}
      <nav class="breadcrumbs">
        <a href="/">Home</a>
        {% for collection in product.collections %}
          {% if collection.handle != 'all' %}
            <span>/</span>
            <a href="{{ collection.url }}">{{ collection.title }}</a>
          {% endif %}
        {% endfor %}
        <span>/</span>
        <span>{{ product.title }}</span>
      </nav>
    {% elsif template contains 'collection' %}
      <nav class="breadcrumbs">
        <a href="/">Home</a>
        {% for collection in collection.all_products %}
          {% if collection.handle != 'all' %}
            <span>/</span>
            <a href="{{ collection.url }}">{{ collection.title }}</a>
          {% endif %}
        {% endfor %}
      </nav>
    {% else %}
      <!-- Code for other templates or pages -->
    {% endif %}

    
  </div>
</div>

<div class="product-wrapper">
  <div class="product-images">
    <h1 id="prtile">{{ product.title }}</h1>
    <!-- Main product image -->
    <div class="main-image">
      <img id="mainimg" src="{{ product.featured_image.src | img_url: 'large' }}" alt="{{ product.title }}">
    </div>
    <!-- Additional product images -->
    <div class="other-images">
      {% for image in product.images %}
        <img class="otherimg" src="{{ image.src | img_url: 'medium' }}" alt="{{ product.title }}">
      {% endfor %}
    </div>
  </div>

  <div class="product-details">
    {% if product.selected_or_first_available_variant.compare_at_price != null
      and product.selected_or_first_available_variant.compare_at_price != undefined
    %}
        <div class="pprices">
      <p class="product-compare">{{ product.selected_or_first_available_variant.compare_at_price | money }}</p>
      <p class="product-original" style="text-decoration: line-through; , color: #8e8e8e;">
        {{ product.selected_or_first_available_variant.price | money }}
      </p></div>

    {% else %}
      <div class="pprices"> <p class="product-original">{{ product.selected_or_first_available_variant.price | money }}</p></div>
    {% endif %}

    {% comment %}
      {% if product.variants.size > 1 %}
        <select name="variant" id="variant">
          {% for variant in product.variants %}

            <option value="{{ variant.id }}">{{ variant.title }}</option>
          {% endfor %}
        </select>
      {% endif %}
    {% endcomment %}
    {% form 'product', product %}
      <input id="product-id" type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
      {% if product.variants.size > 1 %}
        <div class="product-option">
          <table>
            <tbody>
              {% for option in product.options_with_values %}
                <tr>
                  <td>
                    <label for="{{ option.name }}">{{ option.name }}</label>
                  </td>
                  <td>
                    <select name="{{ option.name }}" id="{{ option.name }}">
                      {% for value in option.values %}
                        <option value="{{ value }}">{{ value }}</option>
                      {% endfor %}
                    </select>
                  </td>
                </tr>
              {% endfor %}
            </tbody>
          </table>
        </div>
      {% endif %}
      <div class="posec">
        <!-- Quantity input -->
        <input type="number" name="quantity" id="quantity" value="1" min="1">
        <!-- Add to cart button -->
        <button id="add-to-cart">Add to Cart</button>
      </div>
    {% endform %}

    <div class="tagss">
      <div class="tag">
        {% if product %}
          <p>Tags:</p>
          <ul>
            {% for tag in product.tags %}
              <li>{{ tag }}</li>
            {% endfor %}
          </ul>
          </div>
          <div class="collectiontag">
            {% if product.collections.size > 0 %}
              <p>Collection:</p>
              <ul>
                {% for collection in product.collections %}
                  <li>{{ collection.title }}</li>
                {% endfor %}
              </ul>
            {% else %}
              <p></p>
            {% endif %}
        {% else %}
          <p></p>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<div class="wrapper2">
  <div class="main-description-sec">
    <div class="main-navd">
      <button id="btndesc">Description</button>
      <button id="btndesc2">More Information</button>
    </div>
  </div>

  <div class="description-content">
    <p>{{ product.description }}</p>
  </div>
</div>

<script>
  /*
        // Add to cart functionality
        document.getElementById('add-to-cart').addEventListener('click', function() {
          var variantId = document.getElementById('variant') ? document.getElementById('variant').value : {{ product.variants.first.id }};
          var quantity = document.getElementById('quantity').value;

          // Make an AJAX request to add the product to cart
          fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              id: variantId,
              quantity: quantity
            })
          })
          .then(response => response.json())
          .then(data => {
            // Handle success response
            console.log('Product added to cart:', data);
            // Redirect to the cart page or show a success message
            window.location.href = '/cart'; // Redirect to the cart page
          })
          .catch(error => {
            // Handle any errors that occur during the request
            console.error('Error adding product to cart:', error);
            // Display an error message to the user
            alert('Error adding product to cart. Please try again.');
          });
        });

        let mainimg = document.getElementById('mainimg');
    let otherimgList = document.getElementsByClassName('otherimg');

    // Loop through each element with the 'otherimg' class
    for (let i = 0; i < otherimgList.length; i++) {
        // Attach event listener to each element
        otherimgList[i].addEventListener('click', function() {
            // Update the src attribute of the main image with the clicked image's src
            mainimg.src = this.src; // 'this' refers to the clicked image element
        });
    }*/

    var product = {{ product | json }}

    // Function to update product variant and URL based on selected options
    function updateProductVariant() {
      // Find Selected Options
      var selectedOptions = [];
    
      document.querySelectorAll('.product-option select').forEach(select => {
        selectedOptions.push(select.value);
      });
    
      // Find matched variant
      var matchedVariant = product.variants.find(variant => {
        var pass = true;
        for (var i = 0; i < selectedOptions.length; i++) {
          if (variant.options[i] !== selectedOptions[i]) {
            pass = false;
            break;
          }
        }
        return pass;
      });
    
      // Change product form variant id
      document.querySelector('#product-id').value = matchedVariant.id;
    
      // Change URL
      var url = new URL(window.location.href);
      url.searchParams.set('variant', matchedVariant.id);
      window.history.replaceState(null, null, url.toString());
    }
    
    // Add event listeners to select elements for option change
    document.querySelectorAll('.product-option select').forEach(select => {
      select.addEventListener('change', updateProductVariant);
    });
    
    // Call the function to update product variant on initial page load
    updateProductVariant();
    let mainimg = document.getElementById('mainimg');
let otherimgList = document.getElementsByClassName('otherimg');

// Loop through each element with the 'otherimg' class
for (let i = 0; i < otherimgList.length; i++) {
    // Attach event listener to each element
    otherimgList[i].addEventListener('click', function() {
        // Update the src attribute of the main image with the clicked image's src
        mainimg.src = this.src; // 'this' refers to the clicked image element
    });
}

    
</script>
